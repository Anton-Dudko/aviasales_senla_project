version: "3.9"

services:

  postgredb:
    image: postgres:13.1-alpine
    container_name: senla-postgredb
    ports:
      - 5432:5432
    volumes:
      - ~/app/postgresql:/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=aviasales
    networks:
      - service-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-service:
    container_name: eureka-service
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      service-network:
        ipv4_address: 172.31.0.10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway-service:
      container_name: gateway-service
      build:
        context: ./gateway-service
        dockerfile: Dockerfile
      environment:
        cloud.eureka-host: 172.31.0.10
        cloud.test-service-host: test-service
        cloud.userservice-host: userservice
      networks:
        service-network:
          aliases:
            - gateway-service
      ports:
        - 8080:8080
      depends_on:
        eureka-service:
          condition: service_healthy

  test-service:
      container_name: test-service
      build:
        context: ./test-service
        dockerfile: Dockerfile
      environment:
        cloud.eureka-host: 172.31.0.10
      networks:
        service-network:
          ipv4_address: 172.31.0.3
      depends_on:
        eureka-service:
          condition: service_healthy

  userservice:
    container_name: userservice
    build:
      context: ./userservice
      dockerfile: Dockerfile
    environment:
      management.context-path: /userservice
      hostName: userservice
      DATABASESERVER_PORT: "5432"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgredb:5432/aviasales
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      cloud.eureka-host: 172.31.0.10
    depends_on:
      eureka-service:
        condition: service_healthy
      postgredb:
        condition: service_healthy
#    ports:
#      - 8086:8086
    networks:
      service-network:
        ipv4_address: 172.31.0.11


networks:
  service-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
