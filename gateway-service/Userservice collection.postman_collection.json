{
	"info": {
		"_postman_id": "676354ae-2eff-4803-b106-7088da8e84a0",
		"name": "Userservice collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27427673"
	},
	"item": [
		{
			"name": "create with role ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"adminEmail\", JSON.parse(pm.request.body).email);\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoe\",\r\n    \"email\": \"thaseugene@gmail.com\",\r\n    \"password\": \"johndoe\",\r\n    \"role\": \"ROLE_ADMIN\",\r\n    \"dateBirth\": \"2012-12-12\",\r\n    \"language\": \"RU\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/registration",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "create with role USER",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"userEmail\", JSON.parse(pm.request.body).email);\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoeUSER\",\r\n    \"email\": \"thas@mail.ru\",\r\n    \"password\": \"johndoe\",\r\n    \"dateBirth\": \"2012-12-12\",\r\n    \"language\": \"RU\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/registration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "create another user with role USER",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"userEmail2\", JSON.parse(pm.request.body).email);\r",
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.accessToken;\r",
							"pm.globals.set(\"userToken2\", token);\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoeUSER2\",\r\n    \"email\": \"dfgdfg@gmail.com\",\r\n    \"password\": \"johndoe\",\r\n    \"dateBirth\": \"2012-12-12\",\r\n    \"language\": \"RU\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/registration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login as ADMIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.accessToken;\r",
							"pm.globals.set(\"adminToken\", token);\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"johndoe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login as USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.accessToken;\r",
							"pm.globals.set(\"userToken\", token);\r",
							"\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"johndoe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "find all as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findById as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/find-by-id/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"find-by-id",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllAdminInPage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"role\": \"ROLE_ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllUserInPage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"role\": \"ROLE_USER\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllENPage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"language\": \"EN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllRUPage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"language\": \"RU\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllByDateBirthToPage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"dateBirthTo\": \"2020-12-22\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllByDateBirthFromPage as ADMIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"dateBirthFrom\": \"2000-08-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllByDateBirthBetweenPage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"dateBirthFrom\": \"1990-12-12\",\r\n    \"dateBirthTo\":\"2009-09-09\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllUsernameLikePage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"user\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllEmailLikePage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var userId = jsonData.userResponseList[0].userId;\r",
							"pm.globals.set(\"userId\", userId);\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAdminByEmail as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var adminId = jsonData.userResponseList[0].userId;\r",
							"pm.globals.set(\"adminId\", adminId);\r",
							"\r",
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{adminEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAllUsernameAndEmailLikePage as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"language\": \"EN\",\r\n    \"email\": \"pin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/search",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user as USER",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"userToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoeUSER\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"johndoe\",\r\n    \"dateBirth\": \"1986-05-20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/update/{{userId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"update",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoeUSER\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"johndoe\",\r\n    \"dateBirth\": \"1986-05-20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/update/{{userId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"update",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "new-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{userEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/new-password",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"new-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user as ADMIN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"adminToken\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/deletion/{{userId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"deletion",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user3 400 (without email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 400\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"username3\",\r\n    \"password\": \"pass3\",\r\n    \"dateBirth\": \"1988-10-31\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/registration",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user3 400 (without username)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 400\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"email3@tut.by\",\r\n    \"password\": \"pass3\",\r\n    \"dateBirth\": \"1988-10-31\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/registration",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user3 400(with wrong format email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 400\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"username3\",\r\n    \"email\": \"email3\",\r\n    \"password\": \"pass2\",\r\n    \"dateBirth\": \"1988-10-31\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/registration",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user_if_exist_username 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 401\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoe\",\r\n    \"email\": \"sdfsdf@sdfsfd.by\",\r\n    \"password\": \"pass1\",\r\n    \"dateBirth\": \"2010-10-31\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/registration",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user_if_exist_email 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 401\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"username990\",\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"pass1\",\r\n    \"dateBirth\": \"2010-10-31\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/registration",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 404 (wrong email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 404\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"email11@tut.by\",\r\n    \"password\": \"pass1\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 401 (wrong passwordl)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 401\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"passssfsa1\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "update another user account as USER 403 (no access)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"userToken2\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 403\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"johndoeUSER\",\r\n    \"email\": \"johndoeUSER@gmail.com\",\r\n    \"password\": \"johndoe\",\r\n    \"dateBirth\": \"1986-05-20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/update/{{adminId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"update",
						"{{adminId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user as USER 403 (no access)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.globals.get(\"userToken2\");\r",
							"\r",
							"pm.request.headers.add({\r",
							"    key: \"Authorization\",\r",
							"    value: \"Bearer \" + token\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code should match - 403\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/deletion/{{adminId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"deletion",
						"{{adminId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": ""
		}
	]
}